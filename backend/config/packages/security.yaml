security:
    role_hierarchy:
        ROLE_SELLER: ROLE_USER
        ROLE_ADMIN: [ROLE_USER, ROLE_SELLER]

    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: app_user_provider

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/pay-order, roles: PUBLIC_ACCESS  }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/categories, roles: PUBLIC_ACCESS  }
        - { path: ^/api/products, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/payment/webhook, roles: PUBLIC_ACCESS  }
        - { path: ^/api/oAuth, roles: PUBLIC_ACCESS  }
        - { path: ^/api/tg, roles: PUBLIC_ACCESS }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: ROLE_USER  }
#        - { path: ^/api/product/*, roles: ROLE_SELLER }
#        - { path: ^/api, roles: ROLE_USER }
